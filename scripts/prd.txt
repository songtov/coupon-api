<context>

# Overview  
[
This will be using FastAPI server. 
I want to use uv package manager
I want to use mongoDB.

This is Backend API that controls the coupon system.
There is admin and client. 
Let's assume this is a cafe coupon. 
Admin user can issue a coupon that when a client has 10 coupons they get 1 free coffee.

So admin user can has many companies(cafes) and issue coupon for each organizations.
a client can gather the coupon that company issued and they can get free coffee when they gather some coupons.

a client user will get bar-code for each coupon and each coupon has some rules depoends on organizaiton setting.
Some coupons can have a rule that 5 coupons = 1 coffee or 10 coupons = 1 cake like this.
]

# Core Features  
[List and describe the main features of your product. For each feature, include:
- a client can gather the coupons that company issued
- if coupons are issued via same company then coupons have same bar-code number
- admin can issue the coupon and if a client has already a coupon they can raise the coupon number via bar-code
- this is backend for both admin and client so there should be authentication for both
- If coupons are met with the rule that company made and a client use it, coupon numbers shrink]

# User Experience  
[
- **User Personas:**
  - Admin: Manages companies (cafes), issues coupons, sets reward rules, views analytics.
  - Client: Collects coupons, views coupon status, redeems rewards, authenticates via app or web.
- **Key User Flows:**
  - Admin logs in, creates/edits companies, issues coupons, sets rules (e.g., 10 coupons = 1 coffee), views issued coupons and redemptions.
  - Client logs in, views available coupons, scans/receives barcodes, collects coupons, redeems rewards when requirements are met, views redemption history.
  - Both user types authenticate securely (JWT or OAuth recommended).
- **UI/UX Considerations:**
  - Simple, intuitive interfaces for both admin and client.
  - Mobile-friendly design for client coupon collection and barcode scanning.
  - Clear feedback for coupon collection, redemption, and errors.
  - Admin dashboard for managing companies, coupons, and analytics.
  - Accessibility and localization support for future enhancements.
]

# Technical Architecture 
[ 
- **System Components:**
  - FastAPI backend server
  - MongoDB database
  - Authentication system for admin and client users
  - Barcode generation and validation logic
  - pytest for testing TDD good!
  - Also follow the FastAPI best practice
- **Data Models:**
  - User (admin/client, authentication info)
  - Company (cafe/organization)
  - Coupon (barcode, rule, company, client, status)
  - CouponRule (company, required_coupons, reward)
- **APIs and Integrations:**
  - RESTful endpoints for coupon management, user authentication, company management
  - Barcode API for coupon issuance and validation
- **Infrastructure Requirements:**
  - Deployable with uv package manager
  - MongoDB instance
  - FastAPI server hosting
]

# Development Roadmap  
[
- **MVP Requirements:**
  - User authentication for admin and client
  - Company (cafe) management by admin
  - Coupon issuance by admin for companies
  - Coupon collection by clients
  - Barcode generation and validation
  - Rule-based reward system (e.g., 10 coupons = 1 coffee)
- **Future Enhancements:**
  - Customizable reward rules per company
  - Analytics/dashboard for admins
  - Notification system for clients
  - Multi-language support
  - Integration with POS systems
]

# Logical Dependency Chain
[
- Set up FastAPI project with uv and MongoDB connection
- Implement user authentication (admin/client)
- Create company management endpoints
- Implement coupon issuance and barcode logic
- Develop coupon collection and validation endpoints
- Add rule-based reward redemption logic
- (Enhancements) Add analytics, notifications, integrations
]

# Risks and Mitigations  
[
- **Technical challenges:**
  - Barcode generation/validation: Use established libraries and thorough testing
  - Rule flexibility: Design data models to support customizable rules
- **MVP scope:**
  - Focus on core coupon and reward logic before enhancements
- **Resource constraints:**
  - Prioritize features for MVP, defer enhancements
]

# Appendix  
[Include any additional information:
- Research findings
- Technical specifications]
</PRD>